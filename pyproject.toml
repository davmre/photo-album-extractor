[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "photo-album-extractor"
version = "0.1.0"
description = "PyQt6-based GUI application for extracting individual photos from scanned album pages"
requires-python = ">=3.9"
dependencies = [
    "PyQt6>=6.5.0",
    "Pillow>=9.0.0",
    "numpy>=1.21.0",
    "scipy>=1.13.0",
    "opencv-python>=4.5.0",
    "google-generativeai>=0.3.0",
    "piexif>=1.1.3",
    "python-dateutil>=2.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "pytest-mock>=3.10.0",
    "types-Pillow>=10.0.0",
    "types-requests>=2.31.0",
    "pyright>=1.1.350",
]

[tool.setuptools.packages.find]
include = ["gui*", "core*"]
exclude = ["tests*", "evals*", "test_data*"]

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedVariable = true
ignore = ["scripts"]

[tool.ruff]
# Assume Python 3.9+
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "N802",  # function name should be lowercase (Qt method overrides)
]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings
docstring-code-format = true

[tool.ruff.lint.isort]
known-first-party = ["gui", "image_processing", "storage", "photo_types"]